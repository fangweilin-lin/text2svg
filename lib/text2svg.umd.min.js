;(function (e, t) {
	'object' === typeof exports && 'object' === typeof module
		? (module.exports = t())
		: 'function' === typeof define && define.amd
		? define([], t)
		: 'object' === typeof exports
		? (exports['text2svg'] = t())
		: (e['text2svg'] = t())
})('undefined' !== typeof self ? self : this, function () {
	return (function (e) {
		var t = {}
		function n(r) {
			if (t[r]) return t[r].exports
			var i = (t[r] = { i: r, l: !1, exports: {} })
			return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports
		}
		return (
			(n.m = e),
			(n.c = t),
			(n.d = function (e, t, r) {
				n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r })
			}),
			(n.r = function (e) {
				'undefined' !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
					Object.defineProperty(e, '__esModule', { value: !0 })
			}),
			(n.t = function (e, t) {
				if ((1 & t && (e = n(e)), 8 & t)) return e
				if (4 & t && 'object' === typeof e && e && e.__esModule) return e
				var r = Object.create(null)
				if ((n.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: e }), 2 & t && 'string' != typeof e))
					for (var i in e)
						n.d(
							r,
							i,
							function (t) {
								return e[t]
							}.bind(null, i)
						)
				return r
			}),
			(n.n = function (e) {
				var t =
					e && e.__esModule
						? function () {
								return e['default']
						  }
						: function () {
								return e
						  }
				return n.d(t, 'a', t), t
			}),
			(n.o = function (e, t) {
				return Object.prototype.hasOwnProperty.call(e, t)
			}),
			(n.p = ''),
			n((n.s = 'fb15'))
		)
	})({
		fb15: function (e, t, n) {
			'use strict'
			if ((n.r(t), 'undefined' !== typeof window)) {
				var r = window.document.currentScript,
					i = r && r.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
				i && (n.p = i[1])
			}
			'requestIdleCallback' in window ? requestIdleCallback : requestAnimationFrame
			function o(e, t = {}) {
				const {
						fontSize: n = 12,
						fontWeight: r = 'normal',
						fontFamily: i = 'sans-serif',
						color: o = '#515a6e',
						width: c,
						height: f
					} = t,
					u = `<svg xmlns="http://www.w3.org/2000/svg" width="${c}" height="${f}">\n    <foreignObject x="0" y="0" width="${c}" height="${f}">\n    <div xmlns="http://www.w3.org/1999/xhtml" style="font-size:${n}px;font-weight:${r};font-family:${i};color:${o};line-height:${f}px;text-align:center; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">${e}</div>\n    </foreignObject></svg>`
				let l = u.trim()
				return URL.createObjectURL(new Blob([l], { type: 'image/svg+xml' }))
			}
			function c(e) {
				if (e.clientHeight) return e.clientHeight
				var t = e.parentNode
				if (!t) return 0
				var n = t.clientHeight
				return 0 === n ? c(t) : n
			}
			function f(e) {
				if (e.clientWidth) return e.clientWidth
				var t = e.parentNode
				if (!t) return 0
				var n = t.clientWidth
				return 0 === n ? f(t) : n
			}
			var u = {
					bind: function (e, t, n) {
						const { content: r, options: i = {} } = t.value || {}
						if (!r && 0 !== r) return
						const u = new IntersectionObserver(
							(e, t) => {
								e.forEach(e => {
									if (e.isIntersecting) {
										const n = e.target
										;(i.width = f(n)), (i.height = c(n))
										JSON.stringify(i)
										let u = ''
										u = o(r, i)
										let l = `;background: url(${u}) no-repeat center;height:${i.height}px;`
										0 == n.parentNode.clientWidth && (l += `width:${i.width}px`), (n.style.cssText += l), t.unobserve(n)
									}
								})
							},
							{ once: !0 }
						)
						u.observe(e), (e._io = u)
					},
					unbind: function (e, t, n) {
						const r = e._io
						r && (r.disconnect(), (e._io = null))
					}
				},
				l = e => {
					e.directive('text2svg', u)
				}
			t['default'] = l
		}
	})
})
//# sourceMappingURL=text2svg.umd.min.js.map
